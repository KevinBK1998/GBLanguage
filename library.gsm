PUSH DE
PUSH BC
PUSH AF
LD B, 0x0
CP B
JR NZ, WRITE_CHECK

//read
LD A, 0x10
LD [HN], A, 0x0
LD A, [HN], 0x0
JR LIB_END

WRITE_CHECK:
POP AF
PUSH AF
INC B
CP B
JR NZ, LOAD_ASCII_CHECK

//write
NOP

LOAD_ASCII_CHECK:
POP AF
PUSH AF
INC B
CP B
JR NZ, LIB_END

// LOAD ASCII
CALL WAIT_VBLANK
// turn off display
LD A, 0x19
LD [HN], A, 0x40
// setup palette
LD A, 0xE4
LD [HN], A, 0x47
LD [HN], A, 0x48
LD [HN], A, 0x49
//copy ascii tiles
LD HL, 0x8200
LD BC, ASCII_TABLE
LD E, 0x6

LOAD_TILESET_LOOP:
LD D, 0x0
CALL COPY_BC_TO_HL_LOOP
DEC E
JR NZ, LOAD_TILESET_LOOP

//copy background map - title in this case
LD HL, 0x9C00
LD BC, 0x134
LD D, 0xB
CALL COPY_BC_TO_HL_LOOP
// turn on display
LD A, 0x99
LD [HN], A, 0x40
// wait for oam
LD B, 0x0
CALL WAIT_SCANLINE_LOOP
CALL WAIT_VBLANK
BRKP:

LIB_END:
POP BC
POP BC
POP DE
RET

WAIT_VBLANK:
LD B, 0x90
CALL WAIT_SCANLINE_LOOP
RET

WAIT_SCANLINE_LOOP:
LD A, [HN], 0x44
CP B
JR NZ, WAIT_SCANLINE_LOOP
RET

COPY_BC_TO_HL_LOOP:
LD A, [BC]
LDI [HL], A
INC BC
DEC D
JR NZ, COPY_BC_TO_HL_LOOP
RET